name: o11y-canary
testcases:
  - name: docker compose up
    steps:
      - type: exec
        script: docker compose up --build -d --wait --force-recreate

  # - name: wait for VictoriaMetrics and o11y-canary metrics
  #   steps:
  #     - type: exec
  #       script: |
  #         for i in $(seq 1 15); do
  #           metrics=$(curl --cacert certs/rootCA.pem -s https://localhost:8428/metrics)
  #           if echo "$metrics" | grep -q '^o11y_canary_'; then
  #             exit 0
  #           fi
  #           sleep 2
  #         done
  #         echo "VictoriaMetrics /metrics endpoint not ready or o11y_canary metric not found after retries" >&2
  #         echo "--- VictoriaMetrics /metrics output ---" >&2
  #         curl --cacert certs/rootCA.pem -s https://localhost:8428/metrics >&2
  #         echo "--- END ---" >&2
  #         exit 1

  - name: Check for metric write() existence
    steps:
      - type: exec
        script: |
          for i in $(seq 1 30); do
            out=$(curl --cacert certs/rootCA.pem -G https://localhost:8428/api/v1/query \
              -H "Content-Type: application/json" \
              --data-urlencode 'query=o11y_canary_canaried_metric_total')
            if echo "$out" | grep -q '"__name__":"o11y_canary_canaried_metric_total"'; then
              echo "$out"
              exit 0
            fi
            sleep 2
          done
          echo "Metric not found after 60s. Last query output:" >&2
          echo "$out" >&2
          exit 1
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldContainSubstring '"status":"success"'
          - result.systemout ShouldContainSubstring "__name__":"o11y_canary_canaried_metric_total"
          - result.systemout ShouldContainSubstring "service.name":"my_canary_1"

  - name: Check for metric query() existence and that queries were successful
    steps:
      - type: exec
        script: |
          curl -s http://localhost:8080/metrics | grep -q '^o11y_canary_query_successes_total{.*} [1-9]'
        assertions:
          - result.code ShouldEqual 0

  - name: Check that total query count is incrementing
    steps:
      - type: exec
        script: |
          curl -s http://localhost:8080/metrics | grep -q '^o11y_canary_queries_total{.*} [1-9]'
        assertions:
          - result.code ShouldEqual 0

  - name: Check that failed queries are zero
    steps:
      - type: exec
        script: |
          curl -s http://localhost:8080/metrics | grep -q '^o11y_canary_query_errors_total{.*} 0'
        assertions:
          - result.code ShouldEqual 0

  - name: Check for o11y_canary_info in internal metrics
    steps:
      - type: exec
        script: |
          curl -s http://localhost:8080/metrics | grep -q '^o11y_canary_info{'
        assertions:
          - result.code ShouldEqual 0

  - name: clean up docker resources
    steps:
      - type: exec
        script: docker compose down --volumes --remove-orphans
